{"version":3,"file":"delivery-page.component.js","sourceRoot":"","sources":["../../../../../../../../delivery-page/src/lib/components/delivery-page/delivery-page.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, HostListener, inject, Renderer2 } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup,\n  FormRecord,\n  ReactiveFormsModule,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Address, Feature, MockService } from '../../services/mock.service';\nimport { Debounce } from '@tt/shared';\n\n\nenum ReceiverType {\n  PERSON = 'PERSON',\n  LEGAL = 'LEGAL'\n}\n\nfunction getAddressForm(initialValue: Address = {}) {\n  return new FormGroup({\n    city: new FormControl<string>(initialValue.city ?? ''),\n    street: new FormControl<string>(initialValue.street ?? ''),\n    building: new FormControl<number | null>(initialValue.building ?? null),\n    apartment: new FormControl<number | null>(initialValue.apartment ?? null)\n  });\n}\n\nconst validateStartWith: ValidatorFn = (control: AbstractControl) => {\n  return control.value.startsWith('я')\n    ? { startsWith: 'Я - последняя буква в алфавите' }\n    : null;\n};\n\n\n@Component({\n  selector: 'tt-delivery-page',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './delivery-page.component.html',\n  styleUrl: './delivery-page.component.scss'\n})\nexport class DeliveryPageComponent {\n  public hostElement = inject(ElementRef);\n  public r2 = inject(Renderer2);\n  ReceiverType = ReceiverType;\n\n  mockService = inject(MockService);\n  features: Feature[] = [];\n\n  // #fb = inject(FormBuilder);\n  // form = this.#fb.group({\n  //   type: this.#fb.nonNullable.control<ReceiverType>(ReceiverType.PERSON),\n  //   name: this.#fb.control<string>('', Validators.required),\n  //   inn: this.#fb.control<string>(''),\n  //   lastName: this.#fb.control<string>('ЗНАЧЕНИЕ'),\n  //   address: this.#fb.group({\n  //     city: this.#fb.control<string>(''),\n  //     street: this.#fb.control<string>(''),\n  //     building: this.#fb.control<number | null>(null),\n  //     apartment: this.#fb.control<number | null>(null)\n  //   })\n  // });\n\n  form = new FormGroup({\n    type: new FormControl<ReceiverType>(ReceiverType.PERSON),\n    // name: new FormControl<string>({value: '', disabled: true}, Validators.required),\n    name: new FormControl<string>('', [Validators.required, validateStartWith]),\n    inn: new FormControl<string>(''),\n    lastName: new FormControl<string>(''),\n    addresses: new FormArray([getAddressForm()]),\n    feature: new FormRecord({})\n  });\n\n  constructor() {\n    this.mockService.getAddressData()\n      .pipe(takeUntilDestroyed())\n      .subscribe(addrs => {\n        // while (this.form.controls.addresses.controls.length > 0) {\n        //   this.form.controls.addresses.removeAt(0);\n        // }\n        this.form.controls.addresses.clear();\n\n        for (const addr of addrs) {\n          this.form.controls.addresses.push(getAddressForm(addr));\n        }\n      });\n\n    this.mockService.getFeatures()\n      .pipe(takeUntilDestroyed())\n      .subscribe(features => {\n        this.features = features;\n\n        for (const feature of features) {\n          this.form.controls.feature.addControl(\n            feature.code,\n            new FormControl(feature.value)\n          );\n        }\n      });\n\n    this.form.controls.type.valueChanges.pipe(takeUntilDestroyed()).subscribe(val => {\n      this.form.controls.inn.clearValidators();\n\n      if (val === ReceiverType.LEGAL) {\n        this.form.controls.inn.setValidators(\n          [Validators.required, Validators.minLength(10), Validators.maxLength(10)]\n        );\n      }\n    });\n\n    // this.form.valueChanges.subscribe(val => {\n    //   console.log(val);\n    // })\n\n    // this.form.controls.lastName.disable()\n  }\n\n  onSubmit(event: SubmitEvent) {\n    // const formPatch = {\n    //   name: 'Alesha',\n    //   lastName: 'Popovich'\n    // }\n    // this.form.setValue('всё')\n    // this.form.controls.type.patchValue(ReceiverType.LEGAL, {\n    //   emitEvent: false\n    //   onlySelf: true\n    // })\n    // this.form.reset({\n    //   type: ReceiverType.PERSON,\n    //   name: 'LUCAS'\n    // }, {\n    // emitEvent: false\n    // onlySelf: true\n    // })\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n    console.log(this.form.getRawValue());\n    this.form.reset({ type: ReceiverType.PERSON });\n  }\n\n  addAddress() {\n    // this.form.controls.addresses.push(getAddressForm())\n    this.form.controls.addresses.insert(0, getAddressForm());\n  }\n\n  deleteAddress(index: number) {\n    this.form.controls.addresses.removeAt(index, {\n      emitEvent: false\n    });\n  }\n\n  sort = () => 0;\n\n  ngAfterViewInit() {\n    this.resizeFeed();\n  }\n\n  @Debounce(20)\n  @HostListener('window: resize')\n  onWindowResize() {\n    this.resizeFeed();\n  }\n\n  public resizeFeed() {\n    const { top } = this.hostElement.nativeElement.getBoundingClientRect();\n    const height = window.innerHeight - top - 48;\n    this.r2.setStyle(this.hostElement.nativeElement, 'height', `${height}px`);\n  }\n}\n"]}