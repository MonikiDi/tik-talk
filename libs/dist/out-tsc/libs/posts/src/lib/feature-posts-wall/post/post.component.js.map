{"version":3,"file":"post.component.js","sourceRoot":"","sources":["../../../../../../../../posts/src/lib/feature-posts-wall/post/post.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  computed,\r\n  DestroyRef,\r\n  ElementRef,\r\n  inject,\r\n  input,\r\n  signal,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { catchError, throwError } from 'rxjs';\r\nimport {\r\n  assertNonNullish,\r\n  DataCreateAtPipe,\r\n  normalizationText,\r\n} from '@tt/shared';\r\nimport { CommentComponent, PostInputComponent } from '../../ui';\r\nimport { AvatarCircleComponent, SvgIconComponent } from '@tt/common-ui';\r\nimport { Post } from '@tt/interfaces/post';\r\nimport { Store } from '@ngrx/store';\r\nimport { postsActions, PostService, selectProfileMe } from '@tt/data-access';\r\nimport { NgClass } from '@angular/common';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { EditPostComponent } from '../edit-post/edit-post.component';\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  standalone: true,\r\n  imports: [\r\n    AvatarCircleComponent,\r\n    SvgIconComponent,\r\n    PostInputComponent,\r\n    CommentComponent,\r\n    DataCreateAtPipe,\r\n    NgClass,\r\n    EditPostComponent,\r\n  ],\r\n  templateUrl: './post.component.html',\r\n  styleUrl: './post.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PostComponent {\r\n  private readonly postService = inject(PostService);\r\n  private readonly destroyRef = inject(DestroyRef);\r\n  private readonly store = inject(Store);\r\n  public post = input.required<Post>();\r\n  public hasMe = input<boolean>();\r\n  public profile = this.store.selectSignal(selectProfileMe);\r\n  public parentData = signal('');\r\n  public isActiveComments = false;\r\n  public likes = computed(() => {\r\n    return this.post().likes;\r\n  });\r\n  public comments = computed(() => {\r\n    return this.post().comments;\r\n  });\r\n  public showEdit = false;\r\n\r\n  onDeletePost(postId: number) {\r\n    this.store.dispatch(postsActions.deletePost({ postId }));\r\n  }\r\n\r\n  onCreateCommit(text: string) {\r\n    const profile = this.profile();\r\n    const result = normalizationText(text);\r\n    const post = this.post();\r\n    assertNonNullish(profile, '');\r\n    assertNonNullish(result, '');\r\n    assertNonNullish(post, '');\r\n\r\n    if (this.parentData() === '' || result === '') {\r\n      this.parentData.set('');\r\n      return;\r\n    }\r\n\r\n    this.store.dispatch(\r\n      postsActions.createComment({\r\n        text: result,\r\n        authorId: profile.id,\r\n        postId: post.id,\r\n        commentId: 0,\r\n      })\r\n    );\r\n    this.parentData.set('');\r\n\r\n    // firstValueFrom(\r\n    //   this.postService.createComment({\r\n    //     text: result,\r\n    //     authorId: profile.id,\r\n    //     postId: post.id,\r\n    //     commentId: 0,\r\n    //   })\r\n    // )\r\n    //   .then(() => {\r\n    //     return firstValueFrom(\r\n    //       this.postService.getCommentPostId(this.post()!.id)\r\n    //     );\r\n    //   })\r\n    //   .then((comments) => {\r\n    //     this.comments.set(comments);\r\n    //     this.parentData.set('');\r\n    //   });\r\n  }\r\n\r\n  toggleLikes(post: Post) {\r\n    this.postService\r\n      .addLike(post.id)\r\n      .pipe(\r\n        catchError((error: HttpErrorResponse) => {\r\n          if (error.error.detail === 'Like is already created') {\r\n            return this.postService.deleteLike(post.id);\r\n          }\r\n          return throwError(() => {\r\n            return error;\r\n          });\r\n        }),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      )\r\n      .subscribe((response) => {\r\n        this.store.dispatch(\r\n          postsActions.updatePosts({\r\n            post: {\r\n              ...this.post(),\r\n              likes:\r\n                response.message === 'Like created'\r\n                  ? this.post().likes + 1\r\n                  : this.post().likes - 1,\r\n            },\r\n          })\r\n        );\r\n      });\r\n  }\r\n\r\n  toggleComment() {\r\n    if (this.post()!.comments.length >= 0) {\r\n      this.isActiveComments = !this.isActiveComments;\r\n    }\r\n  }\r\n\r\n  onEditPost() {\r\n    this.showEdit = !this.showEdit;\r\n  }\r\n\r\n  showEditEvent(showEdit: boolean) {\r\n    this.showEdit = showEdit;\r\n  }\r\n}\r\n"]}