{"version":3,"file":"message-input.component.js","sourceRoot":"","sources":["../../../../../../../../chats/src/lib/ui/message-input/message-input.component.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,MAAM,EAEN,YAAY,EACZ,MAAM,EACN,KAAK,EACL,MAAM,EACN,SAAS,EACT,MAAM,EACN,SAAS,GACV,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AACvC,OAAO,EAAE,qBAAqB,EAAE,MAAM,eAAe,CAAC;AACtD,OAAO,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAU3C,IAAM,qBAAqB,GAA3B,MAAM,qBAAqB;IACf,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IACvC,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACN,cAAc,GAC7B,SAAS,CAAC,QAAQ,CAAmB,gBAAgB,CAAC,CAAC;IACzD,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;IAC9C,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;IAEb,IAAW,IAAI,CAAC,KAAa;QACpC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAES,UAAU,GAAG,IAAI,YAAY,EAAU,CAAC;IAElD,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAES,QAAQ,GAAG,IAAI,YAAY,EAAU,CAAC;IAEhD;QACE,MAAM,CAAC,GAAG,EAAE;YACV,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAElC,IAAI,SAAS,KAAK,EAAE,EAAE;gBACpB,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,aAAa,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;aACzE;iBAAM;gBACL,IAAI,CAAC,EAAE,CAAC,QAAQ,CACd,IAAI,CAAC,cAAc,EAAE,CAAC,aAAa,EACnC,QAAQ,EACP,IAAI,CAAC,cAAc,EAAE,CAAC,aAAqB,CAAC,YAAY,GAAG,IAAI,CACjE,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AA3BU;IAAR,KAAK,EAAE;iDAEP;AAES;IAAT,MAAM,EAAE;yDAAyC;AAMxC;IAAT,MAAM,EAAE;uDAAuC;AAlBrC,qBAAqB;IARjC,SAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,CAAC,qBAAqB,EAAE,WAAW,EAAE,IAAI,EAAE,gBAAgB,CAAC;QACrE,WAAW,EAAE,gCAAgC;QAC7C,QAAQ,EAAE,gCAAgC;QAC1C,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,qBAAqB,CAmCjC","sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  effect,\r\n  ElementRef,\r\n  EventEmitter,\r\n  inject,\r\n  Input,\r\n  Output,\r\n  Renderer2,\r\n  signal,\r\n  viewChild,\r\n} from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgIf } from '@angular/common';\r\nimport { AvatarCircleComponent } from '@tt/common-ui';\r\nimport { SvgIconComponent } from '@tt/common-ui';\r\nimport { Store } from '@ngrx/store';\r\nimport { selectProfileMe } from '@tt/data-access';\r\n\r\n@Component({\r\n  selector: 'app-message-input',\r\n  standalone: true,\r\n  imports: [AvatarCircleComponent, FormsModule, NgIf, SvgIconComponent],\r\n  templateUrl: './message-input.component.html',\r\n  styleUrl: './message-input.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MessageInputComponent {\r\n  private readonly store = inject(Store);\r\n  r2 = inject(Renderer2);\r\n  private readonly textAreaTarget =\r\n    viewChild.required<ElementRef<void>>('textAreaTarget');\r\n  me = this.store.selectSignal(selectProfileMe);\r\n  postText = signal('');\r\n\r\n  @Input() public set data(value: string) {\r\n    this.postText.set(value);\r\n  }\r\n\r\n  @Output() dataChange = new EventEmitter<string>();\r\n\r\n  onDataChange(value: string) {\r\n    this.dataChange.emit(value);\r\n  }\r\n\r\n  @Output() onSubmit = new EventEmitter<string>();\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      const textValue = this.postText();\r\n\r\n      if (textValue === '') {\r\n        this.r2.setStyle(this.textAreaTarget().nativeElement, 'height', 'auto');\r\n      } else {\r\n        this.r2.setStyle(\r\n          this.textAreaTarget().nativeElement,\r\n          'height',\r\n          (this.textAreaTarget().nativeElement as any).scrollHeight + 'px'\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}