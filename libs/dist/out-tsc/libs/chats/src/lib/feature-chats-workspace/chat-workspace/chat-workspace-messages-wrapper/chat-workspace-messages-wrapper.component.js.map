{"version":3,"file":"chat-workspace-messages-wrapper.component.js","sourceRoot":"","sources":["../../../../../../../../../chats/src/lib/feature-chats-workspace/chat-workspace/chat-workspace-messages-wrapper/chat-workspace-messages-wrapper.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  computed,\r\n  effect,\r\n  ElementRef,\r\n  HostListener,\r\n  inject,\r\n  input,\r\n  Renderer2,\r\n  signal,\r\n} from '@angular/core';\r\nimport { ChatWorkspaceMessagesComponent } from './chat-workspace-messages/chat-workspace-messages.component';\r\nimport { MessageInputComponent } from '../../../ui/message-input/message-input.component';\r\nimport {\r\n  assertNonNullish,\r\n  chatByDay,\r\n  DateUtcPipe,\r\n  Debounce,\r\n  normalizationText,\r\n} from '@tt/shared';\r\nimport { Chat } from '@tt/interfaces/chats/chats.interface';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ChatsService } from '@tt/data-access';\r\nimport { Profile } from '@tt/interfaces/profile';\r\nimport { RelativeDatePipe } from '../../../../../../shared/src/lib/utils/pipes/relative-date.pipe';\r\n\r\n@Component({\r\n  selector: 'app-chat-workspace-messages-wrapper',\r\n  standalone: true,\r\n  imports: [\r\n    ChatWorkspaceMessagesComponent,\r\n    MessageInputComponent,\r\n    DateUtcPipe,\r\n    DatePipe,\r\n    RelativeDatePipe\r\n  ],\r\n  templateUrl: './chat-workspace-messages-wrapper.component.html',\r\n  styleUrl: './chat-workspace-messages-wrapper.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChatWorkspaceMessagesWrapperComponent implements AfterViewInit {\r\n  private readonly hostElement = inject(ElementRef);\r\n  private readonly chatsService = inject(ChatsService);\r\n  private readonly r2 = inject(Renderer2);\r\n  public readonly chat = input.required<Chat>();\r\n  public readonly profileMe = input.required<Profile>();\r\n  public readonly filterDayMessages = computed(() => {\r\n    return chatByDay(this.chat().messages);\r\n  });\r\n  public readonly parentData = signal('');\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      this.scrollToBottom();\r\n    });\r\n  }\r\n\r\n  scrollToBottom() {\r\n    if (this.hostElement) {\r\n      this.hostElement.nativeElement.scrollTo({\r\n        top: this.hostElement.nativeElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.resizeFeed();\r\n  }\r\n\r\n  @Debounce(20)\r\n  @HostListener('window: resize')\r\n  onWindowResize() {\r\n    this.resizeFeed();\r\n  }\r\n\r\n  public resizeFeed() {\r\n    const { top } = this.hostElement.nativeElement.getBoundingClientRect();\r\n    const height = window.innerHeight - top - 48;\r\n    this.r2.setStyle(this.hostElement.nativeElement, 'height', `${height}px`);\r\n  }\r\n\r\n  async onSendMessage(messageText: string) {\r\n    setTimeout(()=>{\r\n    this.scrollToBottom();\r\n    }, 300)\r\n    const result = normalizationText(messageText);\r\n    assertNonNullish(result, '');\r\n    if (this.parentData() === '' || result === '') {\r\n      this.parentData.set('');\r\n      return;\r\n    }\r\n    this.chatsService.wsAdapter.sendMessage(result, this.chat().id);\r\n    this.parentData.set('');\r\n  }\r\n}\r\n"]}