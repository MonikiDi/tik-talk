{"version":3,"file":"chat-workspace-messages-wrapper.component.js","sourceRoot":"","sources":["../../../../../../../../../chats/src/lib/feature-chats-workspace/chat-workspace/chat-workspace-messages-wrapper/chat-workspace-messages-wrapper.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  ElementRef,\n  HostListener,\n  inject,\n  input,\n  Renderer2,\n  signal,\n} from '@angular/core';\nimport { ChatWorkspaceMessagesComponent } from './chat-workspace-messages/chat-workspace-messages.component';\nimport { MessageInputComponent } from '../../../ui/message-input/message-input.component';\nimport {\n  assertNonNullish,\n  chatByDay,\n  DateUtcPipe,\n  Debounce,\n  normalizationText,\n} from '@tt/shared';\nimport { Chat } from '@tt/interfaces/chats/chats.interface';\nimport { DatePipe } from '@angular/common';\nimport { ChatsService } from '@tt/data-access';\nimport { Profile } from '@tt/interfaces/profile';\nimport { RelativeDatePipe } from '../../../../../../shared/src/lib/utils/pipes/relative-date.pipe';\n\n@Component({\n  selector: 'app-chat-workspace-messages-wrapper',\n  standalone: true,\n  imports: [\n    ChatWorkspaceMessagesComponent,\n    MessageInputComponent,\n    DateUtcPipe,\n    DatePipe,\n    RelativeDatePipe\n  ],\n  templateUrl: './chat-workspace-messages-wrapper.component.html',\n  styleUrl: './chat-workspace-messages-wrapper.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChatWorkspaceMessagesWrapperComponent implements AfterViewInit {\n  private readonly hostElement = inject(ElementRef);\n  private readonly chatsService = inject(ChatsService);\n  private readonly r2 = inject(Renderer2);\n  public readonly chat = input.required<Chat>();\n  public readonly profileMe = input.required<Profile>();\n  public readonly filterDayMessages = computed(() => {\n    return chatByDay(this.chat().messages);\n  });\n  public readonly parentData = signal('');\n\n  constructor() {\n    effect(() => {\n      this.scrollToBottom();\n    });\n  }\n\n  scrollToBottom() {\n    if (this.hostElement) {\n      this.hostElement.nativeElement.scrollTo({\n        top: this.hostElement.nativeElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    this.resizeFeed();\n  }\n\n  @Debounce(20)\n  @HostListener('window: resize')\n  onWindowResize() {\n    this.resizeFeed();\n  }\n\n  public resizeFeed() {\n    const { top } = this.hostElement.nativeElement.getBoundingClientRect();\n    const height = window.innerHeight - top - 48;\n    this.r2.setStyle(this.hostElement.nativeElement, 'height', `${height}px`);\n  }\n\n  async onSendMessage(messageText: string) {\n    setTimeout(()=>{\n    this.scrollToBottom();\n    }, 300)\n    const result = normalizationText(messageText);\n    assertNonNullish(result, '');\n    if (this.parentData() === '' || result === '') {\n      this.parentData.set('');\n      return;\n    }\n    this.chatsService.wsAdapter.sendMessage(result, this.chat().id);\n    this.parentData.set('');\n  }\n}\n"]}