{"version":3,"file":"chats-list.component.js","sourceRoot":"","sources":["../../../../../../../../chats/src/lib/feature-chats-workspace/chats-list/chats-list.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  computed,\r\n  ElementRef,\r\n  HostListener,\r\n  inject,\r\n  OnInit,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { SvgIconComponent } from '@tt/common-ui';\r\nimport { ChatsBtnComponent } from '../chats-btn/chats-btn.component';\r\nimport { RouterLink, RouterLinkActive } from '@angular/router';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { Debounce } from '@tt/shared';\r\nimport { Store } from '@ngrx/store';\r\nimport { chatsActions, selectLastMessageChatMap } from '@tt/data-access';\r\n\r\n@Component({\r\n  selector: 'app-chats-list',\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    SvgIconComponent,\r\n    ChatsBtnComponent,\r\n    RouterLinkActive,\r\n    RouterLink,\r\n  ],\r\n  templateUrl: './chats-list.component.html',\r\n  styleUrl: './chats-list.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChatsListComponent implements OnInit, AfterViewInit {\r\n  public hostElement = inject(ElementRef);\r\n  public r2 = inject(Renderer2);\r\n  public store = inject(Store);\r\n\r\n  filterChatsControl = new FormControl('');\r\n\r\n  public chats = this.store.selectSignal(selectLastMessageChatMap);\r\n\r\n  private readonly filterChatsControlValue = toSignal(\r\n    this.filterChatsControl.valueChanges,\r\n    { initialValue: this.filterChatsControl.value }\r\n  );\r\n\r\n  public filterChats = computed(() => {\r\n    const inputValue = this.filterChatsControlValue();\r\n    return this.chats()\r\n      .filter((chat) => {\r\n        return `${chat.userFrom.firstName} ${chat.userFrom.lastName}`\r\n          .toLowerCase()\r\n          .includes(inputValue!.toLowerCase() ?? '');\r\n      })\r\n      .slice()\r\n      .sort((a, b) => {\r\n        return new Date(a.createdAt) > new Date(b.createdAt) ? -1 : 1;\r\n      });\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(chatsActions.loadLastMessageChatMap());\r\n  }\r\n  ngAfterViewInit() {\r\n    this.resizeFeed();\r\n  }\r\n\r\n  // 2 Метод c Декоратором\r\n  @Debounce(20)\r\n  @HostListener('window: resize')\r\n  onWindowResize() {\r\n    this.resizeFeed();\r\n  }\r\n\r\n  public resizeFeed() {\r\n    const { top } = this.hostElement.nativeElement.getBoundingClientRect();\r\n    const height = window.innerHeight - top - 48;\r\n    this.r2.setStyle(this.hostElement.nativeElement, 'height', `${height}px`);\r\n  }\r\n}\r\n"]}