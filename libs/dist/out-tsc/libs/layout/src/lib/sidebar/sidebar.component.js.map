{"version":3,"file":"sidebar.component.js","sourceRoot":"","sources":["../../../../../../../layout/src/lib/sidebar/sidebar.component.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,uBAAuB,EACvB,SAAS,EAET,MAAM,GAEP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAC/D,OAAO,EAAE,uBAAuB,EAAE,MAAM,iBAAiB,CAAC;AAC1D,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,EACL,cAAc,EACd,eAAe,EACf,YAAY,EACZ,iBAAiB,GAClB,MAAM,iBAAiB,CAAC;AAkBlB,IAAM,gBAAgB,GAAtB,MAAM,gBAAgB;IACV,gBAAgB,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;IAC7C,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IACvB,YAAY,GAC1B,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC;IAElC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;IAC9C,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;IAE/C,SAAS,GAAG;QAC1B;YACE,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,YAAY;SACnB;QACD;YACE,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,OAAO;SACd;QACD;YACE,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,QAAQ;SACf;QACD;YACE,KAAK,EAAE,UAAU;YACjB,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE,eAAe;SACtB;QACD;YACE,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,WAAW;SAClB;KACF,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD,CAAC;CACF,CAAA;AAxCY,gBAAgB;IAhB5B,SAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,gBAAgB;YAChB,KAAK;YACL,UAAU;YACV,SAAS;YACT,uBAAuB;YACvB,UAAU;YACV,gBAAgB;SACjB;QACD,WAAW,EAAE,0BAA0B;QACvC,QAAQ,EAAE,0BAA0B;QACpC,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,gBAAgB,CAwC5B","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  inject,\n  OnInit,\n} from '@angular/core';\nimport { ImgUrlPipe, SvgIconComponent } from '@tt/common-ui';\nimport { AsyncPipe, NgFor } from '@angular/common';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { SubscriberCardComponent } from '@tt/subscribers';\nimport { Store } from '@ngrx/store';\nimport {\n  profileActions,\n  selectProfileMe,\n  selectUnread,\n  SubscriberService,\n} from '@tt/data-access';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [\n    SvgIconComponent,\n    NgFor,\n    RouterLink,\n    AsyncPipe,\n    SubscriberCardComponent,\n    ImgUrlPipe,\n    RouterLinkActive,\n  ],\n  templateUrl: './sidebar.component.html',\n  styleUrl: './sidebar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidebarComponent implements OnInit {\n  private readonly subcriberService = inject(SubscriberService);\n  private readonly store = inject(Store);\n  public readonly subscribers$ =\n    this.subcriberService.getSubscribersShortList();\n\n  public readonly me = this.store.selectSignal(selectProfileMe);\n  public readonly unread = this.store.selectSignal(selectUnread);\n\n  public readonly menuItems = [\n    {\n      label: 'Моя страница',\n      icon: 'home',\n      link: 'profile/me',\n    },\n    {\n      label: 'Чаты',\n      icon: 'chats',\n      link: 'chats',\n    },\n    {\n      label: 'Поиск',\n      icon: 'search',\n      link: 'search',\n    },\n    {\n      label: 'Доставка',\n      icon: 'delivery-page',\n      link: 'delivery-page',\n    },\n    {\n      label: 'Тест страница',\n      icon: 'test-page',\n      link: 'test-page',\n    },\n  ];\n\n  ngOnInit() {\n    this.store.dispatch(profileActions.loadGetMe());\n  }\n}\n"]}