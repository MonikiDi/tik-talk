{"version":3,"file":"chat-ws-native.service.js","sourceRoot":"","sources":["../../../../../../../../data-access/src/lib/chats/services/chat-ws-native.service.ts"],"names":[],"mappings":";AAAA,WAAW;AACX,4BAA4B;AAC5B,mBAAmB;AACnB,2DAA2D;AAC3D,EAAE;AACF,8DAA8D;AAC9D,sCAAsC;AACtC,EAAE;AACF,oDAAoD;AACpD,gCAAgC;AAChC,gEAAgE;AAChE,EAAE;AACF,0DAA0D;AAC1D,+CAA+C;AAC/C,sDAAsD;AACtD,SAAS;AACT,EAAE;AACF,mCAAmC;AACnC,mCAAmC;AACnC,SAAS;AACT,MAAM;AACN,EAAE;AACF,sDAAsD;AACtD,0BAA0B;AAC1B,yBAAyB;AACzB,gBAAgB;AAChB,2BAA2B;AAC3B,WAAW;AACX,SAAS;AACT,MAAM;AACN,EAAE;AACF,yBAAyB;AACzB,6BAA6B;AAC7B,MAAM;AACN,IAAI","sourcesContent":["// import {\n//   ChatConnectionWSParams,\n//   ChatWsService,\n// } from '@tt/interfaces/chats/chat-ws-service.interface';\n//\n// export class ChatWsNativeService implements ChatWsService {\n//   #socket: WebSocket | null = null;\n//\n//   connect(params: ChatConnectionWSParams): void {\n//     if (this.#socket) return;\n//     this.#socket = new WebSocket(params.url, [params.token]);\n//\n//     this.#socket.onmessage = (event: MessageEvent) => {\n//       // TODO обработка сообщения event.data\n//       params.handleMessage(JSON.parse(event.data));\n//     };\n//\n//     this.#socket.close = () => {\n//       console.log('Чат закрыт');\n//     };\n//   }\n//\n//   sendMessage(text: string, chatId: number): void {\n//     this.#socket?.send(\n//       JSON.stringify({\n//         text,\n//         chat_id: chatId,\n//       })\n//     );\n//   }\n//\n//   disconnect(): void {\n//     this.#socket?.close();\n//   }\n// }\n"]}