{"version":3,"file":"selectors.js","sourceRoot":"","sources":["../../../../../../../../data-access/src/lib/chats/store/selectors.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,aAAa,CAAC;AAC7C,OAAO,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;AAEvC,MAAM,CAAC,MAAM,gBAAgB,GAAG,cAAc,CAC5C,YAAY,CAAC,kBAAkB,EAC/B,YAAY,CAAC,aAAa,EAC1B,CAAC,YAAY,EAAE,OAAO,EAAE,EAAE;IACxB,OAAO,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAC1D,CAAC,CACF,CAAC;AACF,MAAM,CAAC,MAAM,wBAAwB,GAAG,cAAc,CACpD,YAAY,CAAC,wBAAwB,EACrC,CAAC,KAAK,EAAE,EAAE;IACR,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9B,CAAC,CACF,CAAC;AACF,MAAM,CAAC,MAAM,kBAAkB,GAAG,cAAc,CAC9C,YAAY,CAAC,kBAAkB,EAC/B,CAAC,YAAY,EAAE,EAAE;IACf,OAAO,YAAY,CAAC;AACtB,CAAC,CACF,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,MAAc,EAAE,EAAE;IAC5C,OAAO,cAAc,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,OAAO,EAAE,EAAE;QAC5D,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,MAAc,EAAE,EAAE;IACjD,OAAO,cAAc,CACnB,YAAY,CAAC,wBAAwB,EACrC,CAAC,kBAAkB,EAAE,EAAE;QACrB,OAAO,kBAAkB,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC,CACF,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,YAAY,GAAG,cAAc,CACxC,YAAY,CAAC,YAAY,EACzB,CAAC,MAAM,EAAE,EAAE;IACT,OAAO,MAAM,CAAC;AAChB,CAAC,CACF,CAAC;AACF,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,MAAc,EAAE,EAAE;IACnD,OAAO,cAAc,CACnB,YAAY,CAAC,wBAAwB,EACrC,CAAC,kBAAkB,EAAE,EAAE;QACrB,OAAO,OAAO,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7C,CAAC,CACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { createSelector } from '@ngrx/store';\r\nimport { chatsFeature } from './store';\r\n\r\nexport const selectActiveChat = createSelector(\r\n  chatsFeature.selectActiveChatId,\r\n  chatsFeature.selectChatMap,\r\n  (activeChatId, chatMap) => {\r\n    return activeChatId ? chatMap[activeChatId] : undefined;\r\n  }\r\n);\r\nexport const selectLastMessageChatMap = createSelector(\r\n  chatsFeature.selectLastMessageChatMap,\r\n  (state) => {\r\n    return Object.values(state);\r\n  }\r\n);\r\nexport const selectActiveChatId = createSelector(\r\n  chatsFeature.selectActiveChatId,\r\n  (activeChatId) => {\r\n    return activeChatId;\r\n  }\r\n);\r\n\r\nexport const getChatBuId = (chatId: string) => {\r\n  return createSelector(chatsFeature.selectChatMap, (chatMap) => {\r\n    return chatMap[chatId];\r\n  });\r\n};\r\nexport const getLastMessageId = (chatId: string) => {\r\n  return createSelector(\r\n    chatsFeature.selectLastMessageChatMap,\r\n    (lastMessageChatMap) => {\r\n      return lastMessageChatMap[chatId];\r\n    }\r\n  );\r\n};\r\nexport const selectUnread = createSelector(\r\n  chatsFeature.selectUnread,\r\n  (unread) => {\r\n    return unread;\r\n  }\r\n);\r\nexport const hasLastMessageById = (chatId: string) => {\r\n  return createSelector(\r\n    chatsFeature.selectLastMessageChatMap,\r\n    (lastMessageChatMap) => {\r\n      return Boolean(lastMessageChatMap[chatId]);\r\n    }\r\n  );\r\n};\r\n"]}