export declare const selectActiveChat: import("@ngrx/store").MemoizedSelector<Record<string, any>, import("../../../../../interfaces/src/lib/chats").Chat | undefined, (s1: string | null, s2: import("./store").ChatMap) => import("../../../../../interfaces/src/lib/chats").Chat | undefined>;
export declare const selectLastMessageChatMap: import("@ngrx/store").MemoizedSelector<Record<string, any>, import("../../../../../interfaces/src/lib/chats").LastMessageRes[], (s1: import("./store").LastMessageChatMap) => import("../../../../../interfaces/src/lib/chats").LastMessageRes[]>;
export declare const selectActiveChatId: import("@ngrx/store").MemoizedSelector<Record<string, any>, string | null, (s1: string | null) => string | null>;
export declare const getChatBuId: (chatId: string) => import("@ngrx/store").MemoizedSelector<Record<string, any>, import("../../../../../interfaces/src/lib/chats").Chat, (s1: import("./store").ChatMap) => import("../../../../../interfaces/src/lib/chats").Chat>;
export declare const getLastMessageId: (chatId: string) => import("@ngrx/store").MemoizedSelector<Record<string, any>, import("../../../../../interfaces/src/lib/chats").LastMessageRes, (s1: import("./store").LastMessageChatMap) => import("../../../../../interfaces/src/lib/chats").LastMessageRes>;
export declare const selectUnread: import("@ngrx/store").MemoizedSelector<Record<string, any>, number, (s1: number) => number>;
export declare const hasLastMessageById: (chatId: string) => import("@ngrx/store").MemoizedSelector<Record<string, any>, boolean, (s1: import("./store").LastMessageChatMap) => boolean>;
//# sourceMappingURL=selectors.d.ts.map