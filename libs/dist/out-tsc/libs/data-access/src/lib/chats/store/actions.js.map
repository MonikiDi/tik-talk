{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../../../../../../data-access/src/lib/chats/store/actions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAInE,MAAM,CAAC,MAAM,YAAY,GAAG,iBAAiB,CAAC;IAC5C,MAAM,EAAE,OAAO;IACf,MAAM,EAAE;QACN,kBAAkB,EAAE,KAAK,EAAsB;QAC/C,oBAAoB,EAAE,KAAK,EAAmB;QAC9C,yBAAyB,EAAE,UAAU,EAAE;QACvC,2BAA2B,EAAE,KAAK,EAA+B;QACjE,kBAAkB,EAAE,KAAK,EAAsB;QAC/C,kBAAkB,EAAE,KAAK,EAAwC;QACjE,wBAAwB,EAAE,KAAK,EAG3B;QACJ,qBAAqB,EAAE,KAAK,EAA+C;QAC3E,gBAAgB,EAAE,KAAK,EAAoD;QAC3E,YAAY,EAAE,KAAK,EAAsB;KAC1C;CACF,CAAC,CAAC","sourcesContent":["import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { Chat, LastMessageRes, Message } from '@tt/interfaces/chats';\nimport { ChatWSNewMessage } from '@tt/interfaces/chats/chat-ws-message.interface';\n\nexport const chatsActions = createActionGroup({\n  source: 'chats',\n  events: {\n    'load getChatById': props<{ chatId: number }>(),\n    'loaded getChatById': props<{ chats: Chat }>(),\n    'load lastMessageChatMap': emptyProps(),\n    'loaded lastMessageChatMap': props<{ chats: LastMessageRes[] }>(),\n    'set activeChatId': props<{ chatId: string }>(),\n    'add message chat': props<{ chatId: string; message: Message }>(),\n    'upsert lastMessageChat': props<{\n      chatId: string;\n      message: Partial<LastMessageRes>;\n    }>(),\n    'add lastMessageChat': props<{ chatId: string; message: LastMessageRes }>(),\n    'get Profile Id': props<{ profileId: string; message: ChatWSNewMessage }>(),\n    'set unread': props<{ unread: number }>(),\n  },\n});\n"]}