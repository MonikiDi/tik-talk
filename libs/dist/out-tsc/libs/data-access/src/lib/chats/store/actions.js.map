{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../../../../../../data-access/src/lib/chats/store/actions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAInE,MAAM,CAAC,MAAM,YAAY,GAAG,iBAAiB,CAAC;IAC5C,MAAM,EAAE,OAAO;IACf,MAAM,EAAE;QACN,kBAAkB,EAAE,KAAK,EAAsB;QAC/C,oBAAoB,EAAE,KAAK,EAAmB;QAC9C,yBAAyB,EAAE,UAAU,EAAE;QACvC,2BAA2B,EAAE,KAAK,EAA+B;QACjE,kBAAkB,EAAE,KAAK,EAAsB;QAC/C,kBAAkB,EAAE,KAAK,EAAwC;QACjE,wBAAwB,EAAE,KAAK,EAG3B;QACJ,qBAAqB,EAAE,KAAK,EAA+C;QAC3E,gBAAgB,EAAE,KAAK,EAAoD;QAC3E,YAAY,EAAE,KAAK,EAAsB;KAC1C;CACF,CAAC,CAAC","sourcesContent":["import { createActionGroup, emptyProps, props } from '@ngrx/store';\r\nimport { Chat, LastMessageRes, Message } from '@tt/interfaces/chats';\r\nimport { ChatWSNewMessage } from '@tt/interfaces/chats/chat-ws-message.interface';\r\n\r\nexport const chatsActions = createActionGroup({\r\n  source: 'chats',\r\n  events: {\r\n    'load getChatById': props<{ chatId: number }>(),\r\n    'loaded getChatById': props<{ chats: Chat }>(),\r\n    'load lastMessageChatMap': emptyProps(),\r\n    'loaded lastMessageChatMap': props<{ chats: LastMessageRes[] }>(),\r\n    'set activeChatId': props<{ chatId: string }>(),\r\n    'add message chat': props<{ chatId: string; message: Message }>(),\r\n    'upsert lastMessageChat': props<{\r\n      chatId: string;\r\n      message: Partial<LastMessageRes>;\r\n    }>(),\r\n    'add lastMessageChat': props<{ chatId: string; message: LastMessageRes }>(),\r\n    'get Profile Id': props<{ profileId: string; message: ChatWSNewMessage }>(),\r\n    'set unread': props<{ unread: number }>(),\r\n  },\r\n});\r\n"]}