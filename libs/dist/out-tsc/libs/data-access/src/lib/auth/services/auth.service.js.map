{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["../../../../../../../../data-access/src/lib/auth/services/auth.service.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAMlC,IAAM,WAAW,GAAjB,MAAM,WAAW;IACtB,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAC1B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IACxB,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;IACtC,UAAU,GAAG,kBAAkB,CAAC;IAEhC,KAAK,GAAkB,IAAI,CAAC;IAC5B,YAAY,GAAkB,IAAI,CAAC;IAEnC,IAAI,MAAM;QACR,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC5D;QACD,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,OAA+C;QACnD,MAAM,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE1B,EAAE,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;QACxC,EAAE,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;QAExC,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAgB,GAAG,IAAI,CAAC,UAAU,OAAO,EAAE,EAAE,CAAC;aAClD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAgB,GAAG,IAAI,CAAC,UAAU,SAAS,EAAE;YAChD,aAAa,EAAE,IAAI,CAAC,YAAY;SACjC,CAAC;aACD,IAAI,CACH,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAClC,UAAU,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAI,CAAC,MAAM,EAAE,CAAC;YAEd,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,UAAU,CAAC,GAAkB;QAC3B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,aAAa,CAAC;QAEtC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;IAC3E,CAAC;CACF,CAAA;AAzDY,WAAW;IAHvB,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAyDvB","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { catchError, tap, throwError } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { TokenResponse } from '@tt/interfaces/auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  http = inject(HttpClient);\n  router = inject(Router);\n  cookieService = inject(CookieService);\n  baseApiUrl = '/yt-course/auth/';\n\n  token: string | null = null;\n  refreshToken: string | null = null;\n\n  get isAuth() {\n    if (!this.token) {\n      this.token = this.cookieService.get('token');\n      this.refreshToken = this.cookieService.get('refreshToken');\n    }\n    return !!this.token;\n  }\n\n  login(payload: { username: string; password: string }) {\n    const fd = new FormData();\n\n    fd.append('username', payload.username);\n    fd.append('password', payload.password);\n\n    return this.http\n      .post<TokenResponse>(`${this.baseApiUrl}token`, fd)\n      .pipe(tap((val) => this.saveTokens(val)));\n  }\n\n  refreshAuthToken() {\n    return this.http\n      .post<TokenResponse>(`${this.baseApiUrl}refresh`, {\n        refresh_token: this.refreshToken,\n      })\n      .pipe(\n        tap((val) => this.saveTokens(val)),\n        catchError((err) => {\n          this.logout();\n\n          return throwError(err);\n        })\n      );\n  }\n\n  logout() {\n    this.cookieService.deleteAll;\n    this.token = null;\n    this.refreshToken = null;\n    this.router.navigate(['/login']);\n  }\n\n  saveTokens(res: TokenResponse) {\n    this.token = res.access_token;\n    this.refreshToken = res.refresh_token;\n\n    this.cookieService.set('token', this.token, { path: '/' });\n    this.cookieService.set('refreshToken', this.refreshToken, { path: '/' });\n  }\n}\n"]}