{"version":3,"file":"reducers.js","sourceRoot":"","sources":["../../../../../../../../data-access/src/lib/posts/store/reducers.ts"],"names":[],"mappings":"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","sourcesContent":["import { createFeature, createReducer, on } from '@ngrx/store';\nimport { Post } from '@tt/interfaces/post';\nimport { postsActions } from './actions';\n\nexport type PostsMap = Record<string, Post>;\nexport type UserIdPostsIdMap = Record<string, number[]>;\n\nexport interface PostsState {\n  posts: PostsMap;\n  userIdPostsId: UserIdPostsIdMap;\n}\n\nconst initialState: PostsState = {\n  posts: {},\n  userIdPostsId: {}\n};\n\nexport const postsFeature = createFeature({\n  name: 'postsFeature',\n  reducer: createReducer(\n    initialState,\n    // on(postsActions.loadedPosts, (state, payload) => {\n    //   return {\n    //     ...state,\n    //     posts: payload.posts\n    //   };\n    // }),\n    on(postsActions.deletedPost, (state, payload) => {\n      const userId = state.posts[payload.postId].author.id;\n\n      return {\n        ...state,\n        posts: {\n          ...Object.fromEntries(\n            Object.entries(state.posts).filter(\n              ([key, value]) => key !== String(payload.postId)\n            )\n          )\n        },\n        userIdPostsId: {\n          ...state.userIdPostsId,\n          [userId]: state.userIdPostsId[userId].filter((element) => {\n            return element !== payload.postId;\n          })\n        }\n      };\n    }),\n    on(postsActions.createdPost, (state, payload) => {\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [payload.id]: payload\n        },\n        userIdPostsId: {\n          ...state.userIdPostsId,\n          [payload.author.id]: [\n            ...state.userIdPostsId[payload.author.id],\n            payload.id\n          ]\n        }\n      };\n    }),\n    on(postsActions.loadedPostsUserId, (state, payload) => {\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          ...payload.userPosts.reduce((acc, item) => {\n            return { ...acc, [item.id]: item };\n          }, {} as PostsMap)\n        },\n        userIdPostsId: {\n          ...state.userIdPostsId,\n          ...payload.userPosts.reduce((acc, item) => {\n            if (item.author.id in acc) {\n              acc[item.author.id].push(item.id);\n              return {\n                ...acc\n              };\n            } else {\n              return { ...acc, [item.author.id]: [item.id] };\n            }\n          }, {} as UserIdPostsIdMap)\n        }\n      };\n    }),\n    on(postsActions.updatePosts, (state, payload) => {\n      const postId = payload.post.id;\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [postId]:\n            state.posts[postId].id === postId\n              ? payload.post\n              : state.posts[postId].id\n        }\n      };\n    }),\n    on(postsActions.createdComment, (state, payload) => {\n      const postId = payload.postId;\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [postId]: {\n            ...state.posts[postId],\n            comments: [...state.posts[postId].comments, payload]\n          }\n        }\n      };\n    }),\n    on(postsActions.deletedComment, (state, payload) => {\n      const postId = payload.postId;\n      const commentId = payload.commentId;\n\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [postId]: {\n            ...state.posts[postId],\n            comments: [\n              ...state.posts[postId].comments.filter((element) => {\n                return element.id !== commentId;\n              })\n            ]\n          }\n        }\n      };\n    }),\n    on(postsActions.editedPost, (state, payload) => {\n      const postId = payload.id;\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          [postId]: {\n            ...state.posts[postId],\n            content: payload.content,\n            title: payload.title,\n          },\n        },\n      };\n    })\n  )\n});\n"]}