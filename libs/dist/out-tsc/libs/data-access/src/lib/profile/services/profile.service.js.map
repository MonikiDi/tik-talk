{"version":3,"file":"profile.service.js","sourceRoot":"","sources":["../../../../../../../../data-access/src/lib/profile/services/profile.service.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAGnD,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAK7B,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAC1B,UAAU,GAAG,aAAa,CAAC;IAC3B,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAEtB,KAAK;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,UAAU,YAAY,CAAC,CAAC;IAChE,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,UAAU,WAAW,EAAE,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,YAAY,CAAC,OAAyB;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAU,GAAG,IAAI,CAAC,UAAU,YAAY,EAAE,OAAO,CAAC,CAAC;IAC3E,CAAC;IAED,YAAY,CAAC,IAAU;QACrB,MAAM,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC1B,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,IAAI,CAAC,UAAU,sBAAsB,EACxC,EAAE,CACH,CAAC;IACJ,CAAC;IAED,KAAK,CACH,MAAoC,EACpC,UAGC;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,IAAI,CAAC,UAAU,kBAAkB,EACpC;YACE,MAAM,EAAE;gBACN,GAAG,MAAM;gBACT,IAAI,EAAE,UAAU,EAAE,IAAI,IAAI,CAAC;gBAC3B,IAAI,EAAE,UAAU,EAAE,OAAO,IAAI,EAAE;aAChC;SACF,CACF,CAAC;IACJ,CAAC;CACF,CAAA;AA5CY,cAAc;IAH1B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CA4C1B","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Pageble } from '@tt/shared';\nimport { Profile, QueryParamsProfile } from '@tt/interfaces/profile';\nimport { Store } from '@ngrx/store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  http = inject(HttpClient);\n  baseApiUrl = '/yt-course/';\n  store = inject(Store);\n\n  getMe() {\n    return this.http.get<Profile>(`${this.baseApiUrl}account/me`);\n  }\n\n  getAccount(id: string) {\n    return this.http.get<Profile>(`${this.baseApiUrl}account/${id}`);\n  }\n\n  patchProfile(profile: Partial<Profile>) {\n    return this.http.patch<Profile>(`${this.baseApiUrl}account/me`, profile);\n  }\n\n  uploadAvatar(file: File) {\n    const fd = new FormData();\n    fd.append('image', file);\n    return this.http.post<Profile>(\n      `${this.baseApiUrl}account/upload_image`,\n      fd\n    );\n  }\n\n  query(\n    params?: Partial<QueryParamsProfile>,\n    pagination?: {\n      page: number;\n      perPage: number;\n    }\n  ) {\n    return this.http.get<Pageble<Profile>>(\n      `${this.baseApiUrl}account/accounts`,\n      {\n        params: {\n          ...params,\n          page: pagination?.page || 1,\n          size: pagination?.perPage || 50,\n        },\n      }\n    );\n  }\n}\n"]}