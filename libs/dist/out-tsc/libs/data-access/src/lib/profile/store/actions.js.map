{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../../../../../../data-access/src/lib/profile/store/actions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAInE,MAAM,CAAC,MAAM,cAAc,GAAG,iBAAiB,CAAC;IAC9C,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE;QACN,aAAa,EAAE,UAAU,EAAE;QAC3B,eAAe,EAAE,KAAK,EAA0B;QAChD,eAAe,EAAE,KAAK,EAAoB;QAC1C,sBAAsB,EAAE,KAAK,EAAkB;QAC/C,wBAAwB,EAAE,KAAK,EAAW;QAC1C,iBAAiB,EAAE,KAAK,EAAW;QACnC,cAAc,EAAE,KAAK,EAAsB;QAC3C,aAAa,EAAE,KAAK,EAAqB;QACzC,eAAe,EAAE,KAAK,EAA+B;QACrD,qBAAqB,EAAE,KAAK,EAIxB;QAEJ,gBAAgB,EAAE,KAAK,EAAc;QACrC,iBAAiB,EAAE,KAAK,EAA2B;QACnD,wBAAwB,EAAE,UAAU,EAAE;QACtC,sBAAsB,EAAE,UAAU,EAAE;QACpC,eAAe,EAAE,KAAK,EAOlB;QACJ,0BAA0B,EAAE,KAAK,EAAoB;QACrD,4BAA4B,EAAE,KAAK,EAAoB;QACvD,uBAAuB,EAAE,UAAU,EAAE;KACtC;CACF,CAAC,CAAC","sourcesContent":["import { createActionGroup, emptyProps, props } from '@ngrx/store';\r\nimport { Profile, QueryParamsProfile } from '@tt/interfaces/profile';\r\nimport { Pageble, Pagination } from '@tt/shared';\r\n\r\nexport const profileActions = createActionGroup({\r\n  source: 'profile',\r\n  events: {\r\n    'Load get me': emptyProps(),\r\n    'Loaded get me': props<{ profileMe: Profile }>(),\r\n    'Load patch me': props<Partial<Profile>>(),\r\n    'Load patch avatar me': props<{ file: File }>(),\r\n    'Loaded patch avatar me': props<Profile>(),\r\n    'Loaded patch me': props<Profile>(),\r\n    'Load user id': props<{ userId: string }>(),\r\n    'Loaded user': props<{ user: Profile }>(),\r\n    'filter events': props<Partial<QueryParamsProfile>>(),\r\n    'pagination profiles': props<{\r\n      currentPage: number;\r\n      perPage?: number;\r\n      isScroll?: boolean\r\n    }>(),\r\n\r\n    'pagination set': props<Pagination>(),\r\n    'profiles loaded': props<{ profiles: Profile[] }>(),\r\n    'Loading start profiles': emptyProps(),\r\n    'Loading end profiles': emptyProps(),\r\n    'Load Profiles': props<{\r\n      filters: Partial<QueryParamsProfile>;\r\n      pagination: {\r\n        currentPage: number;\r\n        perPage?: number;\r\n        isScroll?: boolean\r\n      };\r\n    }>(),\r\n    'Loaded Infinite Profiles': props<Pageble<Profile>>(),\r\n    'Loaded Pagination Profiles': props<Pageble<Profile>>(),\r\n    'Delete Store Profiles': emptyProps(),\r\n  }\r\n});\r\n"]}