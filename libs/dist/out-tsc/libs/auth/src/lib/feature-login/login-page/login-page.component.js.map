{"version":3,"file":"login-page.component.js","sourceRoot":"","sources":["../../../../../../../../auth/src/lib/feature-login/login-page/login-page.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACnF,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,mBAAmB,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AACzF,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAUvC,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAC7B,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAExB,iBAAiB,GAAG,MAAM,CAAU,KAAK,CAAC,CAAC;IAE3C,IAAI,GAAG,IAAI,SAAS,CAAC;QACnB,QAAQ,EAAE,IAAI,WAAW,CAAgB,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC;QACnE,QAAQ,EAAE,IAAI,WAAW,CAAgB,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC;KACpE,CAAC,CAAC;IAEH,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,aAAa;YACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF,CAAA;AAnBY,kBAAkB;IAR9B,SAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,CAAC,mBAAmB,CAAC;QAC9B,WAAW,EAAE,6BAA6B;QAC1C,QAAQ,EAAE,6BAA6B;QACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,kBAAkB,CAmB9B","sourcesContent":["import { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@tt/data-access';\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoginPageComponent {\n  authService = inject(AuthService);\n  router = inject(Router);\n\n  isPasswordVisible = signal<boolean>(false);\n\n  form = new FormGroup({\n    username: new FormControl<string | null>(null, Validators.required),\n    password: new FormControl<string | null>(null, Validators.required)\n  });\n\n  onSubmit() {\n    if (this.form.valid) {\n      // @ts-ignore\n      this.authService.login(this.form.value).subscribe((res) => {\n        this.router.navigate(['']);\n      });\n    }\n  }\n}\n"]}