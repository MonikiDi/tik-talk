{"version":3,"file":"login-page.component.js","sourceRoot":"","sources":["../../../../../../../../auth/src/lib/feature-login/login-page/login-page.component.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,MAAM,EACN,MAAM,GACP,MAAM,eAAe,CAAC;AACvB,OAAO,EACL,WAAW,EACX,SAAS,EACT,mBAAmB,EACnB,UAAU,GACX,MAAM,gBAAgB,CAAC;AACxB,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAUvC,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAC7B,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAExB,iBAAiB,GAAG,MAAM,CAAU,KAAK,CAAC,CAAC;IAE3C,IAAI,GAAG,IAAI,SAAS,CAAC;QACnB,QAAQ,EAAE,IAAI,WAAW,CAAgB,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC;QACnE,QAAQ,EAAE,IAAI,WAAW,CAAgB,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC;KACpE,CAAC,CAAC;IAEH,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,aAAa;YACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF,CAAA;AAnBY,kBAAkB;IAR9B,SAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,CAAC,mBAAmB,CAAC;QAC9B,WAAW,EAAE,6BAA6B;QAC1C,QAAQ,EAAE,6BAA6B;QACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,kBAAkB,CAmB9B","sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  inject,\r\n  signal,\r\n} from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '@tt/data-access';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule],\r\n  templateUrl: './login-page.component.html',\r\n  styleUrl: './login-page.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LoginPageComponent {\r\n  authService = inject(AuthService);\r\n  router = inject(Router);\r\n\r\n  isPasswordVisible = signal<boolean>(false);\r\n\r\n  form = new FormGroup({\r\n    username: new FormControl<string | null>(null, Validators.required),\r\n    password: new FormControl<string | null>(null, Validators.required),\r\n  });\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      // @ts-ignore\r\n      this.authService.login(this.form.value).subscribe((res) => {\r\n        this.router.navigate(['']);\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}