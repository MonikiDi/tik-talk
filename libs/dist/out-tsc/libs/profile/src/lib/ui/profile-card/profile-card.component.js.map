{"version":3,"file":"profile-card.component.js","sourceRoot":"","sources":["../../../../../../../../profile/src/lib/ui/profile-card/profile-card.component.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,MAAM,EACN,KAAK,GACN,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAUtC,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IAC/B,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;IACrC,OAAO,CAAW;IAClB,QAAQ,GAAY,IAAI,CAAC;IAC3B,QAAQ,GAAG,IAAI,CAAC;IAEvB,gBAAgB,CAAC,KAAY,EAAE,SAAiB;QAC9C,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SAC/B;IACH,CAAC;IAED,YAAY,CAAC,SAAiB;QAC5B,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;IAC7D,CAAC;IAED,aAAa,CAAC,SAAiB;QAC7B,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;IAC9D,CAAC;CACF,CAAA;AArBU;IAAR,KAAK,EAAE;qDAAmB;AAClB;IAAR,KAAK,EAAE;sDAA0B;AAHvB,oBAAoB;IARhC,SAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;QAC1C,WAAW,EAAE,+BAA+B;QAC5C,QAAQ,EAAE,+BAA+B;QACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,oBAAoB,CAuBhC","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  Input,\n} from '@angular/core';\nimport { ImgUrlPipe } from '@tt/common-ui';\nimport { Profile } from '@tt/interfaces/profile';\nimport { SubscriberService } from '@tt/data-access';\nimport { NgClass } from '@angular/common';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-profile-card',\n  standalone: true,\n  imports: [ImgUrlPipe, NgClass, RouterLink],\n  templateUrl: './profile-card.component.html',\n  styleUrl: './profile-card.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProfileCardComponent {\n  subscriberService = inject(SubscriberService);\n  @Input() profile!: Profile;\n  @Input() disabled: boolean = true;\n  public isActive = true;\n\n  toggleSubscriber(event: Event, profileId: number) {\n    event.stopPropagation();\n    this.isActive = !this.isActive;\n    if (this.isActive) {\n      this.onSubscriber(profileId);\n    } else {\n      this.onUnsubscribe(profileId);\n    }\n  }\n\n  onSubscriber(profileId: number) {\n    this.subscriberService.onSubscriber(profileId).subscribe();\n  }\n\n  onUnsubscribe(profileId: number) {\n    this.subscriberService.onUnsubscribe(profileId).subscribe();\n  }\n}\n"]}