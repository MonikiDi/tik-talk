{"version":3,"file":"profile-card.component.js","sourceRoot":"","sources":["../../../../../../../../profile/src/lib/ui/profile-card/profile-card.component.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,MAAM,EACN,KAAK,GACN,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAUtC,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IAC/B,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;IACrC,OAAO,CAAW;IAClB,QAAQ,GAAY,IAAI,CAAC;IAC3B,QAAQ,GAAG,IAAI,CAAC;IAEvB,gBAAgB,CAAC,KAAY,EAAE,SAAiB;QAC9C,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SAC/B;IACH,CAAC;IAED,YAAY,CAAC,SAAiB;QAC5B,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;IAC7D,CAAC;IAED,aAAa,CAAC,SAAiB;QAC7B,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;IAC9D,CAAC;CACF,CAAA;AArBU;IAAR,KAAK,EAAE;qDAAmB;AAClB;IAAR,KAAK,EAAE;sDAA0B;AAHvB,oBAAoB;IARhC,SAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;QAC1C,WAAW,EAAE,+BAA+B;QAC5C,QAAQ,EAAE,+BAA+B;QACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,oBAAoB,CAuBhC","sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  inject,\r\n  Input,\r\n} from '@angular/core';\r\nimport { ImgUrlPipe } from '@tt/common-ui';\r\nimport { Profile } from '@tt/interfaces/profile';\r\nimport { SubscriberService } from '@tt/data-access';\r\nimport { NgClass } from '@angular/common';\r\nimport { RouterLink } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile-card',\r\n  standalone: true,\r\n  imports: [ImgUrlPipe, NgClass, RouterLink],\r\n  templateUrl: './profile-card.component.html',\r\n  styleUrl: './profile-card.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProfileCardComponent {\r\n  subscriberService = inject(SubscriberService);\r\n  @Input() profile!: Profile;\r\n  @Input() disabled: boolean = true;\r\n  public isActive = true;\r\n\r\n  toggleSubscriber(event: Event, profileId: number) {\r\n    event.stopPropagation();\r\n    this.isActive = !this.isActive;\r\n    if (this.isActive) {\r\n      this.onSubscriber(profileId);\r\n    } else {\r\n      this.onUnsubscribe(profileId);\r\n    }\r\n  }\r\n\r\n  onSubscriber(profileId: number) {\r\n    this.subscriberService.onSubscriber(profileId).subscribe();\r\n  }\r\n\r\n  onUnsubscribe(profileId: number) {\r\n    this.subscriberService.onUnsubscribe(profileId).subscribe();\r\n  }\r\n}\r\n"]}