{"version":3,"file":"profile-page.component.js","sourceRoot":"","sources":["../../../../../../../../profile/src/lib/feature-profile-page/profile-page/profile-page.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, DestroyRef, inject, OnInit } from '@angular/core';\nimport { ProfileHeaderComponent } from '../../ui/profile-header/profile-header.component';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { map, Observable, of, switchMap } from 'rxjs';\nimport { AsyncPipe } from '@angular/common';\nimport { AboutMeComponent, SvgIconComponent, TasksComponent } from '@tt/common-ui';\nimport { SubscribersComponent } from '@tt/subscribers';\nimport { Store } from '@ngrx/store';\nimport { PostFeedComponent } from '@tt/posts';\nimport { postsActions, profileActions, selectPostsUserById, selectUser } from '@tt/data-access';\nimport { takeUntilDestroyed, toSignal } from '@angular/core/rxjs-interop';\nimport { Profile } from '@tt/interfaces/profile';\nimport { SubscriptionsComponent } from '@tt/subscriptions';\n\n@Component({\n  selector: 'app-profile-page',\n  standalone: true,\n  imports: [\n    ProfileHeaderComponent,\n    AsyncPipe,\n    AboutMeComponent,\n    PostFeedComponent,\n    SubscribersComponent,\n    TasksComponent,\n    SvgIconComponent,\n    RouterLink,\n    SubscriptionsComponent\n  ],\n  templateUrl: './profile-page.component.html',\n  styleUrl: './profile-page.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProfilePageComponent implements OnInit {\n  private readonly activatedRoute = inject(ActivatedRoute);\n  private destroyRef = inject(DestroyRef);\n  private readonly router = inject(Router);\n  private readonly store = inject(Store);\n  public profile$: Observable<Profile | undefined> =\n    this.store.select(selectUser);\n  public posts = toSignal(\n    this.activatedRoute.params.pipe(\n      switchMap((params) => {\n        return !params?.['id']\n          ? of(undefined)\n          : this.store.select(selectPostsUserById(params?.['id']));\n      })\n    )\n  );\n\n  ngOnInit() {\n    this.activatedRoute.params\n      .pipe(\n        map((params) => {\n          return params?.['id'];\n        }),\n        takeUntilDestroyed(this.destroyRef)\n      )\n      .subscribe((userId) => {\n        if (userId) {\n          this.store.dispatch(profileActions.loadUserId({ userId: userId }));\n          this.store.dispatch(postsActions.loadPostsUserId({ userId: userId }));\n        } else {\n          throw new Error('not fount user id');\n        }\n      });\n  }\n\n  async sendMessage(userId: number) {\n    this.router.navigate(['/chats', 'new'], { queryParams: { userId } });\n  }\n}\n"]}