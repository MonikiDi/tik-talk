{"version":3,"file":"profile-filters.component.js","sourceRoot":"","sources":["../../../../../../../../profile/src/lib/feature-profile-list/profile-filters/profile-filters.component.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,MAAM,GAEP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,mBAAmB,EAAE,MAAM,gBAAgB,CAAC;AAC7E,OAAO,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AAUlD,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAClC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IACN,UAAU,GAAG,IAAI,SAAS,CAAC;QACzC,SAAS,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;QACrD,QAAQ,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;QACpD,IAAI,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;QAChD,KAAK,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;KAClD,CAAC,CAAC;IAEH,2BAA2B;IAC3B,QAAQ;QACN,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IACrC,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;CACF,CAAA;AAjBY,uBAAuB;IARnC,SAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC;QAChD,WAAW,EAAE,kCAAkC;QAC/C,QAAQ,EAAE,kCAAkC;QAC5C,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,uBAAuB,CAiBnC","sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  inject,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { SvgIconComponent } from '@tt/common-ui';\r\nimport { Store } from '@ngrx/store';\r\nimport { selectFilteredProfiles } from '@tt/data-access';\r\n\r\n@Component({\r\n  selector: 'app-profile-filters',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, SvgIconComponent],\r\n  templateUrl: './profile-filters.component.html',\r\n  styleUrl: './profile-filters.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProfileFiltersComponent implements OnInit {\r\n  store = inject(Store);\r\n  public readonly searchForm = new FormGroup({\r\n    firstName: new FormControl('', { nonNullable: true }),\r\n    lastName: new FormControl('', { nonNullable: true }),\r\n    city: new FormControl('', { nonNullable: true }),\r\n    stack: new FormControl('', { nonNullable: true }),\r\n  });\r\n\r\n  // Заполнить форму из стора\r\n  fillForm() {\r\n    const data = this.store.selectSignal(selectFilteredProfiles);\r\n    this.searchForm.patchValue(data());\r\n  }\r\n  ngOnInit() {\r\n    this.fillForm();\r\n  }\r\n}\r\n"]}