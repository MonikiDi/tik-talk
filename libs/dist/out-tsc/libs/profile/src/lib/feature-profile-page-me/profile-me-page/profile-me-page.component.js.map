{"version":3,"file":"profile-me-page.component.js","sourceRoot":"","sources":["../../../../../../../../profile/src/lib/feature-profile-page-me/profile-me-page/profile-me-page.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAkB,MAAM,EAAE,MAAM,eAAe,CAAC;AAC/G,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,sBAAsB,EAAE,MAAM,kDAAkD,CAAC;AAC1F,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AACnF,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAC;AACvD,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,EAAE,YAAY,EAAE,mBAAmB,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AACrF,OAAO,EAAE,sBAAsB,EAAE,MAAM,mBAAmB,CAAC;AAC3D,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,MAAM,CAAC;AAErC,OAAO,EAAE,iBAAiB,EAAE,MAAM,WAAW,CAAC;AAE9C,OAAO,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAmBzD,IAAM,sBAAsB,GAA5B,MAAM,sBAAsB;IAChB,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IACjC,EAAE,GACP,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;IAEpC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAEzC,KAAK,GAAG,MAAM,CAAS,EAAE,CAAC,CAAC;IAElC,QAAQ;QACN,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE;YAClE,IAAI,EAAE,EAAE;gBACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,YAAY,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAChE,CAAC;aACH;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG;aACL,IAAI,CACH,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE;YACf,IAAI,EAAE,EAAE;gBACN,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aACtD;YACD,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChB,CAAC,CAAC,EACF,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CACpC;aACA,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;CACF,CAAA;AAjCY,sBAAsB;IAjBlC,SAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,sBAAsB;YACtB,UAAU;YACV,gBAAgB;YAChB,oBAAoB;YACpB,cAAc;YACd,gBAAgB;YAChB,sBAAsB;YACtB,iBAAiB;SAClB;QACD,WAAW,EAAE,kCAAkC;QAC/C,QAAQ,EAAE,kCAAkC;QAC5C,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,sBAAsB,CAiClC","sourcesContent":["import { ChangeDetectionStrategy, Component, DestroyRef, inject, OnInit, Signal, signal } from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ProfileHeaderComponent } from '../../ui/profile-header/profile-header.component';\r\nimport { AboutMeComponent, SvgIconComponent, TasksComponent } from '@tt/common-ui';\r\nimport { SubscribersComponent } from '@tt/subscribers';\r\nimport { Store } from '@ngrx/store';\r\nimport { postsActions, selectPostsUserById, selectProfileMe } from '@tt/data-access';\r\nimport { SubscriptionsComponent } from '@tt/subscriptions';\r\nimport { of, switchMap } from 'rxjs';\r\nimport { Post } from '@tt/interfaces/post';\r\nimport { PostFeedComponent } from '@tt/posts';\r\nimport { Profile } from '@tt/interfaces/profile';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\n\r\n@Component({\r\n  selector: 'app-profile-me-page',\r\n  standalone: true,\r\n  imports: [\r\n    ProfileHeaderComponent,\r\n    RouterLink,\r\n    SvgIconComponent,\r\n    SubscribersComponent,\r\n    TasksComponent,\r\n    AboutMeComponent,\r\n    SubscriptionsComponent,\r\n    PostFeedComponent\r\n  ],\r\n  templateUrl: './profile-me-page.component.html',\r\n  styleUrl: './profile-me-page.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProfileMePageComponent implements OnInit {\r\n  private readonly store = inject(Store);\r\n  private destroyRef = inject(DestroyRef);\r\n  public me: Signal<Profile | undefined> =\r\n    this.store.selectSignal(selectProfileMe);\r\n\r\n  public me2 = this.store.select(selectProfileMe);\r\n\r\n  public posts = signal<Post[]>([]);\r\n\r\n  ngOnInit() {\r\n    this.me2.pipe(takeUntilDestroyed(this.destroyRef)).subscribe((me) => {\r\n      if (me) {\r\n        this.store.dispatch(\r\n          postsActions.loadPostsUserId({ userId: Number(this.me()?.id) })\r\n        );\r\n      }\r\n    });\r\n\r\n    this.me2\r\n      .pipe(\r\n        switchMap((me) => {\r\n          if (me) {\r\n            return this.store.select(selectPostsUserById(me.id));\r\n          }\r\n          return of([]);\r\n        }),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      )\r\n      .subscribe((posts) => {\r\n        this.posts.set(posts);\r\n      });\r\n  }\r\n}\r\n"]}