{"version":3,"file":"type-guards.js","sourceRoot":"","sources":["../../../../../../../interfaces/src/lib/chats/type-guards.ts"],"names":[],"mappings":"AAOA,MAAM,UAAU,cAAc,CAC5B,OAAsB;IAEtB,OAAO,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC;AAC3D,CAAC;AAED,MAAM,UAAU,eAAe,CAC7B,OAAsB;IAEtB,OAAO,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,CAAC;AAC5D,CAAC;AAED,MAAM,UAAU,YAAY,CAC1B,OAAsB;IAEtB,OAAO,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC;AAC7D,CAAC","sourcesContent":["import {\r\n  ChatWSErrorMessage,\r\n  ChatWSMessage,\r\n  ChatWSNewMessage,\r\n  ChatWSUnreadMessage,\r\n} from './chat-ws-message.interface';\r\n\r\nexport function isErrorMessage(\r\n  message: ChatWSMessage\r\n): message is ChatWSErrorMessage {\r\n  return 'status' in message && message.status === 'error';\r\n}\r\n\r\nexport function isUnreadMessage(\r\n  message: ChatWSMessage\r\n): message is ChatWSUnreadMessage {\r\n  return 'action' in message && message.action === 'unread';\r\n}\r\n\r\nexport function isNewMessage(\r\n  message: ChatWSMessage\r\n): message is ChatWSNewMessage {\r\n  return 'action' in message && message.action === 'message';\r\n}\r\n"]}