{"version":3,"file":"type-guards.js","sourceRoot":"","sources":["../../../../../../../interfaces/src/lib/chats/type-guards.ts"],"names":[],"mappings":"AAOA,MAAM,UAAU,cAAc,CAC5B,OAAsB;IAEtB,OAAO,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC;AAC3D,CAAC;AAED,MAAM,UAAU,eAAe,CAC7B,OAAsB;IAEtB,OAAO,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,CAAC;AAC5D,CAAC;AAED,MAAM,UAAU,YAAY,CAC1B,OAAsB;IAEtB,OAAO,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC;AAC7D,CAAC","sourcesContent":["import {\n  ChatWSErrorMessage,\n  ChatWSMessage,\n  ChatWSNewMessage,\n  ChatWSUnreadMessage,\n} from './chat-ws-message.interface';\n\nexport function isErrorMessage(\n  message: ChatWSMessage\n): message is ChatWSErrorMessage {\n  return 'status' in message && message.status === 'error';\n}\n\nexport function isUnreadMessage(\n  message: ChatWSMessage\n): message is ChatWSUnreadMessage {\n  return 'action' in message && message.action === 'unread';\n}\n\nexport function isNewMessage(\n  message: ChatWSMessage\n): message is ChatWSNewMessage {\n  return 'action' in message && message.action === 'message';\n}\n"]}